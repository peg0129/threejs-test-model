---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />

    <style lang="scss" is:global>
      .loading {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        background: #fff;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
        overflow: hidden;

        &__progress {
          color: #000;
          font-family: "WorkSans_wght", sans-serif;
          font-variation-settings: "wght" 100;
          font-size: 24px;
        }
      }

      .close {
        animation-name: loadingClose;
        animation-duration: 0.4s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
        animation-timing-function: ease;
      }

      @keyframes loadingClose {
        0% {
          transform: translateX(0);
        }
        100% {
          transform: translateX(100%);
        }
      }

      canvas {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 0;
        background: #fff;
        pointer-events: none;
      }

      main {
        position: relative;
        z-index: 10;
      }

      .section-inner {
        @include inner() {
          margin: 0 auto 100px;

          @include min-md {
            width: 95%;
          }
        }
      }

      .h2 {
        display: inline-block;
        position: relative;
        color: #000;
        font-family: "WorkSans_wght", sans-serif;
        font-variation-settings: "wght" 800;
        padding: 50px 0 14px;
        margin: 0 0 50px;
        line-height: 1;

        @include min-sm {
          padding: 90px 0 7.5px;
          margin: 0 0 20px;
        }

        &__wrap {
          display: flex;
        }

        &__title {
          font-size: 72px;
          margin-bottom: 10px;
        }

        &__subtitle {
          display: block;
          width: 100%;
          height: 32px;
          font-size: 32px;
          overflow: hidden;
          position: relative;

          span {
            width: 100%;
            position: absolute;
            transform: translateY(100%);
          }
        }

        &__bar {
          content: "";
          position: absolute;
          bottom: -5px;
          left: 0;
          background: #000;
          width: 90px;
          height: 5px;
          border-radius: 2.5px;
        }
      }
    </style>
  </head>

  <body>
    <div class="loading">
      <p class="loading__progress"></p>
    </div>

    <!-- <Header /> -->

    <main>
      <slot />
    </main>

    <!-- <Footer /> -->

    <script>
      import {
        $loadingModel,
        $loadingAnimation,
        $loadingProgress,
      } from "../store/loading";

      // ローディング画面を取得
      const loadingLayer = document.querySelectorAll<HTMLElement>(".loading");

      // 現在のパスを取得
      const isIndex: string = window.location.pathname;

      // ローディングプログレスを取得
      const loadingProgress =
        document.querySelectorAll<HTMLElement>(".loading__progress");

      // ローディングプログレスを更新
      $loadingProgress.subscribe((value: string) => {
        loadingProgress[0].innerHTML = value;
      });

      // パスで条件分岐
      switch (isIndex) {
        case "/":
          // 状態の変更を監視
          $loadingModel.subscribe((value: boolean) => {
            // モデルのロード完了
            if (value) {
              // ローディング画面をフェードアウト
              loadingLayer[0].classList.add("close");
              // モデルのローディング状態を初期化
              $loadingModel.set(false);
              // ローディング画面の終了通知
              $loadingAnimation.set(true);
            }
          });
          break;

        default:
          // プログレスは更新されないので、100%に変更
          loadingProgress[0].innerHTML = "100%";
          // ローディング画面をフェードアウト
          loadingLayer[0].classList.add("close");
          // ローディング画面の終了通知
          $loadingAnimation.set(true);
          break;
      }
    </script>
  </body>
</html>
